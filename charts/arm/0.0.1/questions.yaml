groups:
  - name: "ARM Configuration"
    description: "Configure ARM deployment"
  - name: "Networking"
    description: "Configure networking for container"
  - name: "Storage"
    description: "Persist and share data that is separate from the lifecycle of the container"
  - name: "Workload Details"
    description: "Configure how workload should be deployed"
  - name: "Scaling/Upgrade Policy"
    description: "Configure how pods are replaced when configuration is upgraded"
  - name: "Restart Policy"
    description: "Configure when pod should be restarted in case of failure"
  - name: "Resource Reservation"
    description: "Specify resources to be allocated to workload"
  - name: "Advanced DNS Settings"
    description: "Configure DNS settings"
  - name: "Resource Limits"
    description: "Set CPU/memory limits for Kubernetes Pod"

portals:
  web_portal:
    protocols:
      - "http"
    host:
      - "$node_ip"
    ports:
      - "$variable-web_port"
    path: "/"

questions:
  - variable: web_port
    label: "Web Port for ARM"
    group: Networking
    schema:
      type: int
      min: 8000
      max: 65535
      default: 8080
      required: true
  - variable: dnsConfig
    label: "DNS Configuration"
    group: "Advanced DNS Settings"
    schema:
      type: dict
      attrs:
        - variable: options
          label: "DNS Options"
          schema:
            type: list
            items:
              - variable: optionsEntry
                label: "Option Entry Configuration"
                schema:
                  type: dict
                  attrs:
                    - variable: name
                      label: "Option Name"
                      schema:
                        type: string
                        required: true
                    - variable: value
                      label: "Option Value"
                      schema:
                        type: string
                        required: true

  - variable: armUID
    label: "ARM Host ID"
    group: "ARM Configuration"
    description: "The id of the arm user on the host machine. saves having permission errors"
    schema:
      type: string
      default: "1000"

  - variable: armGID
    label: "ARM host group id"
    group: "ARM Configuration"
    description: "The id of the arm group on the host machine. saves having permission errors"
    schema:
      type: string
      default: "1000"

  - variable: hostNetwork
    label: "Configure Host Network"
    group: "Networking"
    schema:
      type: boolean
      default: false

  - variable: environmentVariables
    label: "Environment Variables for ARM"
    group: "ARM Configuration"
    schema:
      type: list
      default: []
      items:
        - variable: environmentVariable
          label: "Environment Variable"
          schema:
            type: dict
            attrs:
              - variable: name
                label: "Name"
                schema:
                  type: string
              - variable: value
                label: "Value"
                schema:
                  type: string

  - variable: timezone
    label: "Container timezone"
    group: "ARM Configuration"
    schema:
      type: string
      default: "Etc/UTC"
      $ref:
        - "definitions/timezone"

  # Update strategy
  - variable: updateStrategy
    description: "Upgrade Policy"
    label: "Update Strategy"
    group: "Scaling/Upgrade Policy"
    schema:
      type: string
      default: "Recreate"
      enum:
        - value: "RollingUpdate"
          description: "Create new pods and then kill old ones"
        - value: "Recreate"
          description: "Kill existing pods before creating new ones"

  # Specify GPU configuration
  - variable: gpuConfiguration
    label: "GPU Configuration"
    group: "Resource Reservation"
    schema:
      type: dict
      $ref:
        - "definitions/gpuConfiguration"
      attrs: []

  - variable: appVolumeMounts
    label: "ARM Storage"
    group: "Storage"
    schema:
      type: dict
      attrs:
        - variable: home
          label: "Home Volume"
          schema:
            type: dict
            attrs:
              - variable: datasetName
                label: "ARM Home Volume Name"
                schema:
                  type: string
                  $ref:
                    - "normalize/ixVolume"
                  show_if: [["hostPathEnabled", "=", false]]
                  default: "ix-arm_data"
                  editable: false
                  hidden: true
              - variable: mountPath
                label: "ARM home Mount Path"
                description: "Path where the volume will be mounted inside the pod"
                schema:
                  type: path
                  hidden: true
                  editable: false
                  default: "/home/arm"
              - variable: hostPathEnabled
                label: "Enable Host Path for ARM Data Volume"
                schema:
                  type: boolean
                  default: false
                  show_subquestions_if: true
                  subquestions:
                    - variable: hostPath
                      label: "Host Path for ARM Home Volume"
                      schema:
                        type: hostpath
                        required: true
                        $ref:
                          - "validations/lockedHostPath"
        - variable: media
          label: "Media Volume"
          schema:
            type: dict
            attrs:
              - variable: datasetName
                label: "ARM Media Volume Name"
                schema:
                  type: string
                  $ref:
                    - "normalize/ixVolume"
                  show_if: [["hostPathEnabled", "=", false]]
                  default: "ix-arm_media"
                  hidden: true
                  editable: false
              - variable: mountPath
                label: "ARM Media Mount Path"
                description: "Path where the volume will be mounted inside the pod"
                schema:
                  type: path
                  hidden: true
                  editable: false
                  default: "/home/arm/media"
              - variable: hostPathEnabled
                label: "Enable Host Path for ARM Media Volume"
                schema:
                  type: boolean
                  default: false
                  show_subquestions_if: true
                  subquestions:
                    - variable: hostPath
                      label: "Host Path for ARM Media Volume"
                      schema:
                        type: hostpath
                        required: true
                        $ref:
                          - "validations/lockedHostPath"
        - variable: music
          label: "Music Volume"
          schema:
            type: dict
            attrs:
              - variable: datasetName
                label: "ARM Music Volume Name"
                schema:
                  type: string
                  $ref:
                    - "normalize/ixVolume"
                  show_if: [["hostPathEnabled", "=", false]]
                  default: "ix-arm_music"
                  editable: false
                  hidden: true
              - variable: mountPath
                label: "ARM logs Mount Path"
                description: "Path where the volume will be mounted inside the pod"
                schema:
                  type: path
                  hidden: true
                  editable: false
                  default: "/home/arm/Music"
              - variable: hostPathEnabled
                label: "Enable Host Path for ARM Music Volume"
                schema:
                  type: boolean
                  default: false
                  show_subquestions_if: true
                  subquestions:
                    - variable: hostPath
                      label: "Host Path for ARM Music Volume"
                      schema:
                        type: hostpath
                        required: true
                        $ref:
                          - "validations/lockedHostPath"
        - variable: logs
          label: "logs Volume"
          schema:
            type: dict
            attrs:
              - variable: datasetName
                label: "ARM logs Volume Name"
                schema:
                  type: string
                  $ref:
                    - "normalize/ixVolume"
                  show_if: [["hostPathEnabled", "=", false]]
                  default: "ix-arm_logs"
                  editable: false
                  hidden: true
              - variable: mountPath
                label: "ARM logs Mount Path"
                description: "Path where the volume will be mounted inside the pod"
                schema:
                  type: path
                  hidden: true
                  editable: false
                  default: "/home/arm/logs"
              - variable: hostPathEnabled
                label: "Enable Host Path for ARM log Volume"
                schema:
                  type: boolean
                  default: false
                  show_subquestions_if: true
                  subquestions:
                    - variable: hostPath
                      label: "Host Path for ARM log Volume"
                      schema:
                        type: hostpath
                        required: true
                        $ref:
                          - "validations/lockedHostPath"
        - variable: config
          label: "Config Volume"
          schema:
            type: dict
            attrs:
              - variable: datasetName
                label: "ARM Config Volume Name"
                schema:
                  type: string
                  $ref:
                    - "normalize/ixVolume"
                  show_if: [["hostPathEnabled", "=", false]]
                  default: "ix-arm_config"
                  editable: false
                  hidden: true
              - variable: mountPath
                label: "arm Config Mount Path"
                description: "Path where the volume will be mounted inside the pod"
                schema:
                  type: path
                  editable: false
                  hidden: true
                  default: "/etc/arm/config"
              - variable: hostPathEnabled
                label: "Enable Host Path for ARM Config Volume"
                schema:
                  type: boolean
                  default: false
                  show_subquestions_if: true
                  subquestions:
                    - variable: hostPath
                      label: "Host Path for ARM Config Volume"
                      schema:
                        type: hostpath
                        required: true
                        $ref:
                          - "validations/lockedHostPath"

  - variable: extraAppVolumeMounts
    label: "ARM Extra Host Path Volumes"
    group: "Storage"
    schema:
      type: list
      items:
        - variable: extraAppVolume
          label: "ARM Host Path Volume"
          description: "Add an extra host path volume for ARM application"
          schema:
            type: dict
            attrs:
              - variable: mountPath
                label: "Mount Path in Pod"
                description: "Path where the volume will be mounted inside the pod"
                schema:
                  type: path
                  required: true
              - variable: hostPath
                label: "Host Path"
                description: "Host path"
                schema:
                  type: hostpath
                  required: true
                  $ref:
                    - "validations/lockedHostPath"
              - variable: readOnly
                label: "Read Only"
                description: "Mount hostpath in read-only mode"
                schema:
                  type: boolean
                  default: false

  - variable: enableResourceLimits
    label: "Enable Pod resource limits"
    group: "Resource Limits"
    schema:
      type: boolean
      default: false
  - variable: cpuLimit
    label: "CPU Limresource limitsit"
    description: "CPU resource limit allow  plain integer values with suffix m(milli) e.g 1000m, 100."
    group: "Resource Limits"
    schema:
      type: string
      show_if: [["enableResourceLimits", "=", true]]
      valid_chars: "^\\d+(?:\\.\\d+(?!.*m$)|m?$)"
      default: "4000m"
  - variable: memLimit
    label: "Memory Limit"
    group: "Resource Limits"
    description: "Memory limits is specified by number of bytes. Followed by quantity suffix like E,P,T,G,M,k and Ei,Pi,Ti,Mi,Gi,Ki can also be used. e.g 129e6, 129M,  128974848000m, 123Mi"
    schema:
      type: string
      show_if: [["enableResourceLimits", "=", true]]
      valid_chars: "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
      default: "8Gi"
